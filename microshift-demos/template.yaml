image: {{ image }}
numcpus: {{ numcpus }}
cpumodel: host-passthrough
memory: {{ memory }}
{% if rhnregister %}
rhnregister: true
{% endif %}
{% if rhnorg %}
rhnorg: {{ rhnorg }}
{% endif %}
{% if rhnactivationkey %}
rhnactivationkey: {{ rhnactivationkey }}
{% endif %}
nets:
  - name: {{ net_name }}
reservedns: {{ reservedns }}
disks:
  - size: {{ disk_size }}
cmds:
  - echo {{ user_password }} | passwd --stdin root
  - useradd {{ user }}
  - usermod -aG wheel {{ user }}
  - echo "{{ user }} ALL=(root) NOPASSWD:ALL" | tee -a /etc/sudoers.d/{{ user }}
  - echo {{ user_password }} | passwd --stdin {{ user }}
  - subscription-manager refresh
  - subscription-manager attach --auto
  - sudo dnf update -y
  - dnf install git vim unzip wget tar python3 python3-pip util-linux-user tmux bind-utils firewalld cockpit ansible-core nmap libvirt-client -y
  - systemctl start  firewalld && systemctl enable firewalld
  - systemctl enable --now cockpit.socket && firewall-cmd --permanent --add-service=cockpit && firewall-cmd --reload
  - cd /tmp/ && curl -OL https://raw.githubusercontent.com/tosin2013/openshift-4-deployment-notes/master/pre-steps/configure-openshift-packages.sh
  - chmod +x /tmp/configure-openshift-packages.sh && /tmp/configure-openshift-packages.sh -i
  - cd /root && git clone https://github.com/tosin2013/microshift-demos.git
{% if offline_token %}
  - export OFFLINE_TOKEN={{ offline_token }}
  - echo $OFFLINE_TOKEN > /root/offline_token
  - echo $OFFLINE_TOKEN > /root/offline_token
{% endif %}
  - cd /root/microshift-demos && ./scripts/configure-builder && export  MICROSHIFT_DEV_PREVIEW=true  && ./scripts/mirror-repos
  - systemctl enable --now cockpit.socket
  - ansible-galaxy collection install community.libvirt
  - ansible-galaxy collection install ansible.posix
  - ansible-galaxy collection install community.general
files:
  - path: /root/.pull-secret.json
    origin: ~/.generated/vmfiles/pull-secret.json